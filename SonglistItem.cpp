#include "pch.h"
#include "SonglistItem.h"
#include "SonglistItem.g.cpp"

// WARNING: This file is automatically generated by a tool. Do not directly
// add this file to your project, as any changes you make will be lost.
// This file is a stub you can use as a starting point for your implementation.
//
// To add a copy of this file to your project:
//   1. Copy this file from its original location to the location where you store 
//      your other source files (e.g. the project root). 
//   2. Add the copied file to your project. In Visual Studio, you can use 
//      Project -> Add Existing Item.
//   3. Delete this comment and the 'static_assert' (below) from the copied file.
//      Do not modify the original file.
//
// To update an existing file in your project:
//   1. Copy the relevant changes from this file and merge them into the copy 
//      you made previously.
//    
// This assertion helps prevent accidental modification of generated files.

namespace winrt::DisenchantMusicPlayer::implementation
{
    // Step4: Implement all this GET and SET
    SonglistItem::SonglistItem(hstring const& songName, hstring const& albumName, hstring const& coverPath)
    {
        m_songName = songName;
        m_albumName = albumName;
        m_coverPath = coverPath;
    }
    hstring SonglistItem::SongName()
    {
        return m_songName; 
    }
    void SonglistItem::SongName(hstring const& value)
    {
        if (m_songName != value)
        {
            m_songName = value;
            m_propertyChanged(*this, Windows::UI::Xaml::Data::PropertyChangedEventArgs{ L"SongName" });
        }
    }
    hstring SonglistItem::AlbumName()
    {
        return m_albumName;
    }
    void SonglistItem::AlbumName(hstring const& value)
    {
        if (m_albumName != value)
        {
            m_albumName = value;
            m_propertyChanged(*this, Windows::UI::Xaml::Data::PropertyChangedEventArgs{ L"AlbumName" });
        }    
    }
    hstring SonglistItem::CoverPath()
    {
        return m_coverPath;
    }
    void SonglistItem::CoverPath(hstring const& value)
    {
        if (m_coverPath != value)
        {
            m_coverPath = value;
            m_propertyChanged(*this, Windows::UI::Xaml::Data::PropertyChangedEventArgs{ L"CoverPath" });
        }    
    }
    winrt::event_token SonglistItem::PropertyChanged(winrt::Windows::UI::Xaml::Data::PropertyChangedEventHandler const& handler)
    {
        return m_propertyChanged.add(handler);
    }
    void SonglistItem::PropertyChanged(winrt::event_token const& token) noexcept
    {
        m_propertyChanged.remove(token);
    }
}
