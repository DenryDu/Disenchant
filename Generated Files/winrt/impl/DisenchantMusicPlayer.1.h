// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.220929.3

#pragma once
#ifndef WINRT_DisenchantMusicPlayer_1_H
#define WINRT_DisenchantMusicPlayer_1_H
#include "winrt/impl/DisenchantMusicPlayer.0.h"
WINRT_EXPORT namespace winrt::DisenchantMusicPlayer
{
    struct __declspec(empty_bases) IAlbumlistPage :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAlbumlistPage>
    {
        IAlbumlistPage(std::nullptr_t = nullptr) noexcept {}
        IAlbumlistPage(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IArtistlistPage :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IArtistlistPage>
    {
        IArtistlistPage(std::nullptr_t = nullptr) noexcept {}
        IArtistlistPage(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IMainWindow :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMainWindow>
    {
        IMainWindow(std::nullptr_t = nullptr) noexcept {}
        IMainWindow(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IPlaylistsPage :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPlaylistsPage>
    {
        IPlaylistsPage(std::nullptr_t = nullptr) noexcept {}
        IPlaylistsPage(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ISettingsPage :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISettingsPage>
    {
        ISettingsPage(std::nullptr_t = nullptr) noexcept {}
        ISettingsPage(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ISonglistItem :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISonglistItem>
    {
        ISonglistItem(std::nullptr_t = nullptr) noexcept {}
        ISonglistItem(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ISonglistItemFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISonglistItemFactory>
    {
        ISonglistItemFactory(std::nullptr_t = nullptr) noexcept {}
        ISonglistItemFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) ISonglistPage :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISonglistPage>
    {
        ISonglistPage(std::nullptr_t = nullptr) noexcept {}
        ISonglistPage(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) IStatisticPage :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStatisticPage>
    {
        IStatisticPage(std::nullptr_t = nullptr) noexcept {}
        IStatisticPage(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
