#pragma checksum "C:\Users\DenryDu\Documents\MyWork\WinUI3\Disenchant.Music\Disenchant.Music\Views\SongDetailView.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "9E663E4B74E28CE5A405B357B8659BEB52CBC94502D681EC562DE8BE0AC9AB61"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Disenchant.Music.Views
{
    partial class SongDetailView : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_Image_Source(global::Microsoft.UI.Xaml.Controls.Image obj, global::Microsoft.UI.Xaml.Media.ImageSource value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Microsoft.UI.Xaml.Media.ImageSource) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Media.ImageSource), targetNullValue);
                }
                obj.Source = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class SongDetailView_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            ISongDetailView_Bindings
        {
            private global::Disenchant.Music.Views.SongDetailView dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.Image obj2;

            private SongDetailView_obj1_BindingsTracking bindingsTracking;

            public SongDetailView_obj1_Bindings()
            {
                this.bindingsTracking = new SongDetailView_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Views\SongDetailView.xaml line 26
                        this.obj2 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // ISongDetailView_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::Disenchant.Music.Views.SongDetailView>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Disenchant.Music.Views.SongDetailView obj, int phase)
            {
                this.Update_Disenchant_Music_GlobalData_AudioPlayer(global::Disenchant.Music.GlobalData.AudioPlayer, phase);
            }
            private void Update_Disenchant_Music_GlobalData_AudioPlayer(global::Disenchant.Music.Models.MAudioPlayer obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_Disenchant_Music_GlobalData_AudioPlayer(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic(obj.CurrentMusic, phase);
                    }
                }
            }
            private void Update_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic(global::Disenchant.Music.Models.MusicInfo obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic_Cover(obj.Cover, phase);
                    }
                }
            }
            private void Update_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic_Cover(global::Microsoft.UI.Xaml.Media.Imaging.BitmapImage obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\SongDetailView.xaml line 26
                    XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Image_Source(this.obj2, obj, null);
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class SongDetailView_obj1_BindingsTracking
            {
                private global::System.WeakReference<SongDetailView_obj1_Bindings> weakRefToBindingObj; 

                public SongDetailView_obj1_BindingsTracking(SongDetailView_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<SongDetailView_obj1_Bindings>(obj);
                }

                public SongDetailView_obj1_Bindings TryGetBindingObject()
                {
                    SongDetailView_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_Disenchant_Music_GlobalData_AudioPlayer(null);
                    UpdateChildListeners_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic(null);
                }

                public void PropertyChanged_Disenchant_Music_GlobalData_AudioPlayer(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    SongDetailView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Disenchant.Music.Models.MAudioPlayer obj = sender as global::Disenchant.Music.Models.MAudioPlayer;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic(obj.CurrentMusic, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "CurrentMusic":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic(obj.CurrentMusic, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Disenchant.Music.Models.MAudioPlayer cache_Disenchant_Music_GlobalData_AudioPlayer = null;
                public void UpdateChildListeners_Disenchant_Music_GlobalData_AudioPlayer(global::Disenchant.Music.Models.MAudioPlayer obj)
                {
                    if (obj != cache_Disenchant_Music_GlobalData_AudioPlayer)
                    {
                        if (cache_Disenchant_Music_GlobalData_AudioPlayer != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_Disenchant_Music_GlobalData_AudioPlayer).PropertyChanged -= PropertyChanged_Disenchant_Music_GlobalData_AudioPlayer;
                            cache_Disenchant_Music_GlobalData_AudioPlayer = null;
                        }
                        if (obj != null)
                        {
                            cache_Disenchant_Music_GlobalData_AudioPlayer = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_Disenchant_Music_GlobalData_AudioPlayer;
                        }
                    }
                }
                public void PropertyChanged_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    SongDetailView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Disenchant.Music.Models.MusicInfo obj = sender as global::Disenchant.Music.Models.MusicInfo;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic_Cover(obj.Cover, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Cover":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic_Cover(obj.Cover, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Disenchant.Music.Models.MusicInfo cache_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic = null;
                public void UpdateChildListeners_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic(global::Disenchant.Music.Models.MusicInfo obj)
                {
                    if (obj != cache_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic)
                    {
                        if (cache_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic).PropertyChanged -= PropertyChanged_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic;
                            cache_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic = null;
                        }
                        if (obj != null)
                        {
                            cache_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic;
                        }
                    }
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Views\SongDetailView.xaml line 26
                {
                    this.ControllerCover = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\SongDetailView.xaml line 4
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    SongDetailView_obj1_Bindings bindings = new SongDetailView_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            }
            return returnValue;
        }
    }
}

