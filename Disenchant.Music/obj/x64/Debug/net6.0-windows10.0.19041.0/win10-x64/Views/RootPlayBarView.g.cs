#pragma checksum "C:\Users\DenryDu\Documents\MyWork\WinUI3\Disenchant.Music\Disenchant.Music\Views\RootPlayBarView.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "A2DD4ABC0B5B50BC78114E5649104A3D6E5639273434185C0DF0DD5C2BDF7A4B"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Disenchant.Music.Views
{
    partial class RootPlayBarView : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_FontIcon_Glyph(global::Microsoft.UI.Xaml.Controls.FontIcon obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Glyph = value ?? global::System.String.Empty;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_RangeBase_Value(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase obj, global::System.Double value)
            {
                obj.Value = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(global::Microsoft.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Image_Source(global::Microsoft.UI.Xaml.Controls.Image obj, global::Microsoft.UI.Xaml.Media.ImageSource value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Microsoft.UI.Xaml.Media.ImageSource) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Media.ImageSource), targetNullValue);
                }
                obj.Source = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class RootPlayBarView_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IRootPlayBarView_Bindings
        {
            private global::Disenchant.Music.Views.RootPlayBarView dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.Button obj2;
            private global::Microsoft.UI.Xaml.Controls.Button obj3;
            private global::Microsoft.UI.Xaml.Controls.FontIcon obj4;
            private global::Microsoft.UI.Xaml.Controls.Slider obj5;
            private global::Microsoft.UI.Xaml.Controls.Button obj6;
            private global::Microsoft.UI.Xaml.Controls.Button obj7;
            private global::Microsoft.UI.Xaml.Controls.FontIcon obj8;
            private global::Microsoft.UI.Xaml.Controls.Button obj9;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj10;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj11;
            private global::Microsoft.UI.Xaml.Controls.Image obj12;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj13;
            private global::Microsoft.UI.Xaml.Controls.Slider obj14;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj15;

            // Fields for each event bindings event handler.
            private global::Microsoft.UI.Xaml.RoutedEventHandler obj2Click;
            private global::Microsoft.UI.Xaml.RoutedEventHandler obj3Click;
            private global::Microsoft.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler obj5ValueChanged;
            private global::Microsoft.UI.Xaml.RoutedEventHandler obj6Click;
            private global::Microsoft.UI.Xaml.RoutedEventHandler obj7Click;
            private global::Microsoft.UI.Xaml.RoutedEventHandler obj9Click;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj4GlyphDisabled = false;
            private static bool isobj5ValueDisabled = false;
            private static bool isobj8GlyphDisabled = false;
            private static bool isobj10TextDisabled = false;
            private static bool isobj11TextDisabled = false;
            private static bool isobj12SourceDisabled = false;
            private static bool isobj13TextDisabled = false;
            private static bool isobj14ValueDisabled = false;
            private static bool isobj15TextDisabled = false;

            private RootPlayBarView_obj1_BindingsTracking bindingsTracking;

            public RootPlayBarView_obj1_Bindings()
            {
                this.bindingsTracking = new RootPlayBarView_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 49 && columnNumber == 179)
                {
                    this.obj2.Click -= obj2Click;
                }
                else if (lineNumber == 129 && columnNumber == 21)
                {
                    this.obj3.Click -= obj3Click;
                }
                else if (lineNumber == 131 && columnNumber == 27)
                {
                    isobj4GlyphDisabled = true;
                }
                else if (lineNumber == 122 && columnNumber == 33)
                {
                    isobj5ValueDisabled = true;
                }
                else if (lineNumber == 123 && columnNumber == 33)
                {
                    this.obj5.ValueChanged -= obj5ValueChanged;
                }
                else if (lineNumber == 96 && columnNumber == 25)
                {
                    this.obj6.Click -= obj6Click;
                }
                else if (lineNumber == 87 && columnNumber == 45)
                {
                    this.obj7.Click -= obj7Click;
                }
                else if (lineNumber == 89 && columnNumber == 31)
                {
                    isobj8GlyphDisabled = true;
                }
                else if (lineNumber == 80 && columnNumber == 25)
                {
                    this.obj9.Click -= obj9Click;
                }
                else if (lineNumber == 60 && columnNumber == 24)
                {
                    isobj10TextDisabled = true;
                }
                else if (lineNumber == 61 && columnNumber == 24)
                {
                    isobj11TextDisabled = true;
                }
                else if (lineNumber == 53 && columnNumber == 20)
                {
                    isobj12SourceDisabled = true;
                }
                else if (lineNumber == 39 && columnNumber == 28)
                {
                    isobj13TextDisabled = true;
                }
                else if (lineNumber == 42 && columnNumber == 21)
                {
                    isobj14ValueDisabled = true;
                }
                else if (lineNumber == 44 && columnNumber == 21)
                {
                    isobj15TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Views\RootPlayBarView.xaml line 49
                        this.obj2 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                        this.obj2Click = (global::System.Object p0, global::Microsoft.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            global::Disenchant.Music.GlobalData.AudioPlayer.CoverBtnClickToDetail(p0, p1);
                        };
                        (global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target)).Click += obj2Click;
                        break;
                    case 3: // Views\RootPlayBarView.xaml line 128
                        this.obj3 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                        this.obj3Click = (global::System.Object p0, global::Microsoft.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            global::Disenchant.Music.GlobalData.AudioPlayer.PlayListModeUpdate(p0, p1);
                        };
                        (global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target)).Click += obj3Click;
                        break;
                    case 4: // Views\RootPlayBarView.xaml line 130
                        this.obj4 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.FontIcon>(target);
                        break;
                    case 5: // Views\RootPlayBarView.xaml line 120
                        this.obj5 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Slider>(target);
                        this.obj5ValueChanged = (global::System.Object p0, global::Microsoft.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventArgs p1) =>
                        {
                            global::Disenchant.Music.GlobalData.AudioPlayer.VolumeUpdate(p0, p1);
                        };
                        (global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Slider>(target)).ValueChanged += obj5ValueChanged;
                        break;
                    case 6: // Views\RootPlayBarView.xaml line 95
                        this.obj6 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                        this.obj6Click = (global::System.Object p0, global::Microsoft.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            global::Disenchant.Music.GlobalData.AudioPlayer.PlayNextSong(p0, p1);
                        };
                        (global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target)).Click += obj6Click;
                        break;
                    case 7: // Views\RootPlayBarView.xaml line 87
                        this.obj7 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                        this.obj7Click = (global::System.Object p0, global::Microsoft.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            global::Disenchant.Music.GlobalData.AudioPlayer.PlayPauseUpdate(p0, p1);
                        };
                        (global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target)).Click += obj7Click;
                        break;
                    case 8: // Views\RootPlayBarView.xaml line 88
                        this.obj8 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.FontIcon>(target);
                        break;
                    case 9: // Views\RootPlayBarView.xaml line 79
                        this.obj9 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                        this.obj9Click = (global::System.Object p0, global::Microsoft.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            global::Disenchant.Music.GlobalData.AudioPlayer.PlayPreviousSong(p0, p1);
                        };
                        (global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target)).Click += obj9Click;
                        break;
                    case 10: // Views\RootPlayBarView.xaml line 60
                        this.obj10 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 11: // Views\RootPlayBarView.xaml line 61
                        this.obj11 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 12: // Views\RootPlayBarView.xaml line 51
                        this.obj12 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                        break;
                    case 13: // Views\RootPlayBarView.xaml line 38
                        this.obj13 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 14: // Views\RootPlayBarView.xaml line 41
                        this.obj14 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Slider>(target);
                        break;
                    case 15: // Views\RootPlayBarView.xaml line 43
                        this.obj15 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IRootPlayBarView_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::Disenchant.Music.Views.RootPlayBarView>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            private bool TryGet_Disenchant_Music_GlobalData_AudioPlayer_PlayListMode(out global::System.Int32 val)
            {
                global::Disenchant.Music.Models.MAudioPlayer obj;
                if (TryGet_Disenchant_Music_GlobalData_AudioPlayer(out obj) && obj != null)
                {
                    val = obj.PlayListMode;
                    return true;
                }
                else
                {
                    val = default(global::System.Int32);
                    return false;
                }
            }

            private bool TryGet_Disenchant_Music_GlobalData_AudioPlayer(out global::Disenchant.Music.Models.MAudioPlayer val)
            {
                val = global::Disenchant.Music.GlobalData.AudioPlayer;
                return true;
            }

            private bool TryGet_Disenchant_Music_GlobalData_AudioPlayer_PlayState(out global::System.Int32 val)
            {
                global::Disenchant.Music.Models.MAudioPlayer obj;
                if (TryGet_Disenchant_Music_GlobalData_AudioPlayer(out obj) && obj != null)
                {
                    val = obj.PlayState;
                    return true;
                }
                else
                {
                    val = default(global::System.Int32);
                    return false;
                }
            }

            private bool TryGet_Disenchant_Music_GlobalData_AudioPlayer_Current(out global::System.TimeSpan val)
            {
                global::Disenchant.Music.Models.MAudioPlayer obj;
                if (TryGet_Disenchant_Music_GlobalData_AudioPlayer(out obj) && obj != null)
                {
                    val = obj.Current;
                    return true;
                }
                else
                {
                    val = default(global::System.TimeSpan);
                    return false;
                }
            }

            private bool TryGet_Disenchant_Music_GlobalData_AudioPlayer_Total(out global::System.TimeSpan val)
            {
                global::Disenchant.Music.Models.MAudioPlayer obj;
                if (TryGet_Disenchant_Music_GlobalData_AudioPlayer(out obj) && obj != null)
                {
                    val = obj.Total;
                    return true;
                }
                else
                {
                    val = default(global::System.TimeSpan);
                    return false;
                }
            }

            private delegate void InvokeFunctionDelegate(int phase);
            private global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate> PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();

            private void Invoke_Disenchant_Music_GlobalData_AudioPlayer_M_GetPlayModeBtn_2854529571(int phase)
            {
                global::System.Int32 p0;
                if (!TryGet_Disenchant_Music_GlobalData_AudioPlayer_PlayListMode(out p0)) { return; }
                global::System.String result = global::Disenchant.Music.GlobalData.AudioPlayer.GetPlayModeBtn(p0);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\RootPlayBarView.xaml line 130
                    if (!isobj4GlyphDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_FontIcon_Glyph(this.obj4, result, null);
                    }
                }
            }

            private void Invoke_Disenchant_Music_GlobalData_AudioPlayer_M_GetPlayPauseBtn_4165536013(int phase)
            {
                global::System.Int32 p0;
                if (!TryGet_Disenchant_Music_GlobalData_AudioPlayer_PlayState(out p0)) { return; }
                global::System.String result = global::Disenchant.Music.GlobalData.AudioPlayer.GetPlayPauseBtn(p0);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\RootPlayBarView.xaml line 88
                    if (!isobj8GlyphDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_FontIcon_Glyph(this.obj8, result, null);
                    }
                }
            }

            private void Invoke_Disenchant_Music_GlobalData_AudioPlayer_M_TimeSpanConverter_3882043851(int phase)
            {
                global::System.TimeSpan p0;
                if (!TryGet_Disenchant_Music_GlobalData_AudioPlayer_Current(out p0)) { return; }
                global::System.String result = global::Disenchant.Music.GlobalData.AudioPlayer.TimeSpanConverter(p0);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\RootPlayBarView.xaml line 38
                    if (!isobj13TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj13, result, null);
                    }
                }
            }

            private void Invoke_Disenchant_Music_GlobalData_AudioPlayer_M_TimeSpanConverter_209755030(int phase)
            {
                global::System.TimeSpan p0;
                if (!TryGet_Disenchant_Music_GlobalData_AudioPlayer_Total(out p0)) { return; }
                global::System.String result = global::Disenchant.Music.GlobalData.AudioPlayer.TimeSpanConverter(p0);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\RootPlayBarView.xaml line 43
                    if (!isobj15TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj15, result, null);
                    }
                }
            }

            private void CompleteUpdate(int phase)
            {
                var functions = this.PendingFunctionBindings;
                this.PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();
                foreach (var function in functions.Values)
                {
                    function.Invoke(phase);
                }
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Disenchant.Music.Views.RootPlayBarView obj, int phase)
            {
                this.Update_Disenchant_Music_GlobalData_AudioPlayer(global::Disenchant.Music.GlobalData.AudioPlayer, phase);
                this.CompleteUpdate(phase);
            }
            private void Update_Disenchant_Music_GlobalData_AudioPlayer(global::Disenchant.Music.Models.MAudioPlayer obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_Disenchant_Music_GlobalData_AudioPlayer(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Disenchant_Music_GlobalData_AudioPlayer_PlayListMode(obj.PlayListMode, phase);
                        this.Update_Disenchant_Music_GlobalData_AudioPlayer_M_GetPlayModeBtn_2854529571(phase);
                        this.Update_Disenchant_Music_GlobalData_AudioPlayer_CurrentVolume(obj.CurrentVolume, phase);
                        this.Update_Disenchant_Music_GlobalData_AudioPlayer_PlayState(obj.PlayState, phase);
                        this.Update_Disenchant_Music_GlobalData_AudioPlayer_M_GetPlayPauseBtn_4165536013(phase);
                        this.Update_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic(obj.CurrentMusic, phase);
                        this.Update_Disenchant_Music_GlobalData_AudioPlayer_Current(obj.Current, phase);
                        this.Update_Disenchant_Music_GlobalData_AudioPlayer_M_TimeSpanConverter_3882043851(phase);
                        this.Update_Disenchant_Music_GlobalData_AudioPlayer_CurrentPosition(obj.CurrentPosition, phase);
                        this.Update_Disenchant_Music_GlobalData_AudioPlayer_Total(obj.Total, phase);
                        this.Update_Disenchant_Music_GlobalData_AudioPlayer_M_TimeSpanConverter_209755030(phase);
                    }
                }
            }
            private void Update_Disenchant_Music_GlobalData_AudioPlayer_PlayListMode(global::System.Int32 obj, int phase)
            {
                this.Update_Disenchant_Music_GlobalData_AudioPlayer_M_GetPlayModeBtn_2854529571(phase);
            }
            private void Update_Disenchant_Music_GlobalData_AudioPlayer_M_GetPlayModeBtn_2854529571(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    if (!isobj4GlyphDisabled)
                    {
                        this.PendingFunctionBindings["Disenchant_Music_GlobalData_AudioPlayer_M_GetPlayModeBtn_2854529571"] = new InvokeFunctionDelegate(this.Invoke_Disenchant_Music_GlobalData_AudioPlayer_M_GetPlayModeBtn_2854529571); 
                    }
                }
            }
            private void Update_Disenchant_Music_GlobalData_AudioPlayer_CurrentVolume(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\RootPlayBarView.xaml line 120
                    if (!isobj5ValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_RangeBase_Value(this.obj5, obj);
                    }
                }
            }
            private void Update_Disenchant_Music_GlobalData_AudioPlayer_PlayState(global::System.Int32 obj, int phase)
            {
                this.Update_Disenchant_Music_GlobalData_AudioPlayer_M_GetPlayPauseBtn_4165536013(phase);
            }
            private void Update_Disenchant_Music_GlobalData_AudioPlayer_M_GetPlayPauseBtn_4165536013(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    if (!isobj8GlyphDisabled)
                    {
                        this.PendingFunctionBindings["Disenchant_Music_GlobalData_AudioPlayer_M_GetPlayPauseBtn_4165536013"] = new InvokeFunctionDelegate(this.Invoke_Disenchant_Music_GlobalData_AudioPlayer_M_GetPlayPauseBtn_4165536013); 
                    }
                }
            }
            private void Update_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic(global::Disenchant.Music.Models.MusicInfo obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic_Title(obj.Title, phase);
                        this.Update_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic_ArtistsAndAlbumStr(obj.ArtistsAndAlbumStr, phase);
                        this.Update_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic_Cover(obj.Cover, phase);
                    }
                }
            }
            private void Update_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic_Title(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\RootPlayBarView.xaml line 60
                    if (!isobj10TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj10, obj, null);
                    }
                }
            }
            private void Update_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic_ArtistsAndAlbumStr(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\RootPlayBarView.xaml line 61
                    if (!isobj11TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj11, obj, null);
                    }
                }
            }
            private void Update_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic_Cover(global::Microsoft.UI.Xaml.Media.Imaging.BitmapImage obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\RootPlayBarView.xaml line 51
                    if (!isobj12SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Image_Source(this.obj12, obj, null);
                    }
                }
            }
            private void Update_Disenchant_Music_GlobalData_AudioPlayer_Current(global::System.TimeSpan obj, int phase)
            {
                this.Update_Disenchant_Music_GlobalData_AudioPlayer_M_TimeSpanConverter_3882043851(phase);
            }
            private void Update_Disenchant_Music_GlobalData_AudioPlayer_M_TimeSpanConverter_3882043851(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    if (!isobj13TextDisabled)
                    {
                        this.PendingFunctionBindings["Disenchant_Music_GlobalData_AudioPlayer_M_TimeSpanConverter_3882043851"] = new InvokeFunctionDelegate(this.Invoke_Disenchant_Music_GlobalData_AudioPlayer_M_TimeSpanConverter_3882043851); 
                    }
                }
            }
            private void Update_Disenchant_Music_GlobalData_AudioPlayer_CurrentPosition(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\RootPlayBarView.xaml line 41
                    if (!isobj14ValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_RangeBase_Value(this.obj14, obj);
                    }
                }
            }
            private void Update_Disenchant_Music_GlobalData_AudioPlayer_Total(global::System.TimeSpan obj, int phase)
            {
                this.Update_Disenchant_Music_GlobalData_AudioPlayer_M_TimeSpanConverter_209755030(phase);
            }
            private void Update_Disenchant_Music_GlobalData_AudioPlayer_M_TimeSpanConverter_209755030(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    if (!isobj15TextDisabled)
                    {
                        this.PendingFunctionBindings["Disenchant_Music_GlobalData_AudioPlayer_M_TimeSpanConverter_209755030"] = new InvokeFunctionDelegate(this.Invoke_Disenchant_Music_GlobalData_AudioPlayer_M_TimeSpanConverter_209755030); 
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class RootPlayBarView_obj1_BindingsTracking
            {
                private global::System.WeakReference<RootPlayBarView_obj1_Bindings> weakRefToBindingObj; 

                public RootPlayBarView_obj1_BindingsTracking(RootPlayBarView_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<RootPlayBarView_obj1_Bindings>(obj);
                }

                public RootPlayBarView_obj1_Bindings TryGetBindingObject()
                {
                    RootPlayBarView_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_Disenchant_Music_GlobalData_AudioPlayer(null);
                    UpdateChildListeners_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic(null);
                }

                public void PropertyChanged_Disenchant_Music_GlobalData_AudioPlayer(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    RootPlayBarView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Disenchant.Music.Models.MAudioPlayer obj = sender as global::Disenchant.Music.Models.MAudioPlayer;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_Disenchant_Music_GlobalData_AudioPlayer_PlayListMode(obj.PlayListMode, DATA_CHANGED);
                                bindings.Update_Disenchant_Music_GlobalData_AudioPlayer_M_GetPlayModeBtn_2854529571(DATA_CHANGED);
                                bindings.Update_Disenchant_Music_GlobalData_AudioPlayer_CurrentVolume(obj.CurrentVolume, DATA_CHANGED);
                                bindings.Update_Disenchant_Music_GlobalData_AudioPlayer_PlayState(obj.PlayState, DATA_CHANGED);
                                bindings.Update_Disenchant_Music_GlobalData_AudioPlayer_M_GetPlayPauseBtn_4165536013(DATA_CHANGED);
                                bindings.Update_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic(obj.CurrentMusic, DATA_CHANGED);
                                bindings.Update_Disenchant_Music_GlobalData_AudioPlayer_Current(obj.Current, DATA_CHANGED);
                                bindings.Update_Disenchant_Music_GlobalData_AudioPlayer_M_TimeSpanConverter_3882043851(DATA_CHANGED);
                                bindings.Update_Disenchant_Music_GlobalData_AudioPlayer_CurrentPosition(obj.CurrentPosition, DATA_CHANGED);
                                bindings.Update_Disenchant_Music_GlobalData_AudioPlayer_Total(obj.Total, DATA_CHANGED);
                                bindings.Update_Disenchant_Music_GlobalData_AudioPlayer_M_TimeSpanConverter_209755030(DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "PlayListMode":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Disenchant_Music_GlobalData_AudioPlayer_PlayListMode(obj.PlayListMode, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CurrentVolume":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Disenchant_Music_GlobalData_AudioPlayer_CurrentVolume(obj.CurrentVolume, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PlayState":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Disenchant_Music_GlobalData_AudioPlayer_PlayState(obj.PlayState, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CurrentMusic":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic(obj.CurrentMusic, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Current":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Disenchant_Music_GlobalData_AudioPlayer_Current(obj.Current, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CurrentPosition":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Disenchant_Music_GlobalData_AudioPlayer_CurrentPosition(obj.CurrentPosition, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Total":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Disenchant_Music_GlobalData_AudioPlayer_Total(obj.Total, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "GetPlayModeBtn":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Disenchant_Music_GlobalData_AudioPlayer_M_GetPlayModeBtn_2854529571(DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "GetPlayPauseBtn":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Disenchant_Music_GlobalData_AudioPlayer_M_GetPlayPauseBtn_4165536013(DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TimeSpanConverter":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Disenchant_Music_GlobalData_AudioPlayer_M_TimeSpanConverter_3882043851(DATA_CHANGED);
                                        bindings.Update_Disenchant_Music_GlobalData_AudioPlayer_M_TimeSpanConverter_209755030(DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private global::Disenchant.Music.Models.MAudioPlayer cache_Disenchant_Music_GlobalData_AudioPlayer = null;
                public void UpdateChildListeners_Disenchant_Music_GlobalData_AudioPlayer(global::Disenchant.Music.Models.MAudioPlayer obj)
                {
                    if (obj != cache_Disenchant_Music_GlobalData_AudioPlayer)
                    {
                        if (cache_Disenchant_Music_GlobalData_AudioPlayer != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_Disenchant_Music_GlobalData_AudioPlayer).PropertyChanged -= PropertyChanged_Disenchant_Music_GlobalData_AudioPlayer;
                            cache_Disenchant_Music_GlobalData_AudioPlayer = null;
                        }
                        if (obj != null)
                        {
                            cache_Disenchant_Music_GlobalData_AudioPlayer = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_Disenchant_Music_GlobalData_AudioPlayer;
                        }
                    }
                }
                public void PropertyChanged_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    RootPlayBarView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Disenchant.Music.Models.MusicInfo obj = sender as global::Disenchant.Music.Models.MusicInfo;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic_Title(obj.Title, DATA_CHANGED);
                                bindings.Update_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic_ArtistsAndAlbumStr(obj.ArtistsAndAlbumStr, DATA_CHANGED);
                                bindings.Update_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic_Cover(obj.Cover, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Title":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic_Title(obj.Title, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ArtistsAndAlbumStr":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic_ArtistsAndAlbumStr(obj.ArtistsAndAlbumStr, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Cover":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic_Cover(obj.Cover, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private global::Disenchant.Music.Models.MusicInfo cache_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic = null;
                public void UpdateChildListeners_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic(global::Disenchant.Music.Models.MusicInfo obj)
                {
                    if (obj != cache_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic)
                    {
                        if (cache_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic).PropertyChanged -= PropertyChanged_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic;
                            cache_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic = null;
                        }
                        if (obj != null)
                        {
                            cache_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_Disenchant_Music_GlobalData_AudioPlayer_CurrentMusic;
                        }
                    }
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 5: // Views\RootPlayBarView.xaml line 120
                {
                    this.VolumeSlider = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Slider>(target);
                }
                break;
            case 7: // Views\RootPlayBarView.xaml line 87
                {
                    this.PlayButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                }
                break;
            case 12: // Views\RootPlayBarView.xaml line 51
                {
                    this.ControllerCover = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                }
                break;
            case 14: // Views\RootPlayBarView.xaml line 41
                {
                    this.ProgressSlider = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Slider>(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\RootPlayBarView.xaml line 4
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    RootPlayBarView_obj1_Bindings bindings = new RootPlayBarView_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

